name: ci

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Run tests
        run: go test -v ./...
  build-server:
    runs-on: ubuntu-latest
    needs:
      - test
    env:
      # Check if this is not a fork as forks cannot push to ghcr
      IS_NOT_FORK: ${{ github.repository == github.event.repository.full_name }}
      DOCKER_IMAGE: ghcr.io/${{ github.actor }}/tunnel-server
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to ghcr
        if: ${{ env.IS_NOT_FORK == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        env:
          CACHE_FROM_CONFIG: "type=registry,ref=${{env.DOCKER_IMAGE}}:buildcache"
          CACHE_TO_CONFIG: "type=registry,ref=${{env.DOCKER_IMAGE}}:buildcache,mode=max"
          PLATFORMS: ${{ github.event_name == 'pull_request' && 'linux/amd64' || 'linux/amd64,linux/arm64' }}
        with:
          file: cmd/tunnel-server/Dockerfile
          context: .
          push: ${{ env.IS_NOT_FORK == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ env.CACHE_FROM_CONFIG }}
          cache-to: ${{ github.event_name == 'push' && env.CACHE_TO_CONFIG || '' }}
          platforms: ${{ env.PLATFORMS }}
  ok:
    runs-on: ubuntu-latest
    needs:
      - test
      - build-server
    if: ${{ !cancelled() }}
    steps:
      - name: Test needed jobs failed
        run: |
          if ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}; then
            echo "One or more required jobs failed"
            exit 1
          fi
          echo "ok"
